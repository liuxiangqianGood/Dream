<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans   
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd"
	default-lazy-init="true">

	<!-- 开启Shiro的注解(如@RequiresRoles,@RequiresPermissions),需借助SpringAOP扫描使用Shiro注解的类,并在必要时进行安全逻辑验证
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor"/> 
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor"> 
	<property name="securityManager" ref="securityManager"/> </bean> -->


	<!-- 缓存管理器 使用Ehcache实现 -->
	<bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
		<!--classpath是缓存属性的配置文件 -->
		<property name="cacheManagerConfigFile" value="classpath:config/ehcache.xml" />
	</bean>

	<!-- 凭证(密码)匹配器 -->
	<bean id="credentialsMatcher" class="com.lxq.Shiro.RetryLimitHashedCredentialsMatcher">
		<constructor-arg ref="cacheManager" />
		<property name="hashAlgorithmName" value="md5" />
		<property name="hashIterations" value="2" />
		<property name="storedCredentialsHexEncoded" value="true" />
	</bean>


	<!-- 这里主要是设置自定义的单Realm应用,若有多个Realm,可使用'realms'属性代替 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="Myrealm" />
		<property name="cacheManager" ref="cacheManager" />
	</bean>
	<!-- 继承自AuthorizingRealm的自定义Realm,即指定Shiro验证用户登录的类为自定义的ShiroRealm.java -->
	<bean id="Myrealm" class="com.lxq.realm.Myrealm">

	</bean>


	<!-- Shiro的Web过滤器 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">

		<!-- Shiro的核心安全接口 -->
		<property name="securityManager" ref="securityManager" />
		<!-- 拿到提交的URL,默认会自动寻找Web工程根目录下的"/login.jsp"页 -->
		<property name="loginUrl" value="/index.jsp" />
		<property name="successUrl" value="/center.jsp" />
		<property name="unauthorizedUrl" value="/error.jsp" />
		<!-- anon：它对应的过滤器里面是空的,什么都没做,这里.do和.jsp后面的*表示参数,比方说login.jsp?main这种 -->
		<!-- authc:该过滤器下的页面必须验证后才能访问,它是Shiro内置的一个拦截器 -->
		<property name="filterChainDefinitions">
			<value>
				<!--anon,不需要验证即可访问，authc需要登录才能访问， authc,perms[admin:manage]登录具有admin赋值的权限才能访问 -->
				/login=anon
				/login.jsp = anon
				/center.jsp = authc
				/Admin/*=authc
				/Student/*=authc
				/Teacher/*=authc
				/** = authc
			</value>
		</property>
	</bean>


	<!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />


</beans>