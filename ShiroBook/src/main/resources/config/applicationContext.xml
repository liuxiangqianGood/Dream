<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-3.0.xsd
           http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
           http://www.springframework.org/schema/tx 
           http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
           
     <context:annotation-config/>
    <!-- 自动扫描spring在JAVA中的注解 -->
    <context:component-scan base-package="com.lxq">
    	<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
    </context:component-scan>    
        
    <!-- 关于数据库的配置 -->      
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<value>classpath:config/jdbc.properties</value>
		</property>
	</bean>  
	
	<!-- 配置数据库连接池 （c3p0） -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<!-- 基本信息 -->
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="driverClass" value="${jdbc.driverClassName}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<!-- 其他配置 -->
		<!--初始化时获取三个连接，取值应在minPoolSize与maxPoolSize之间。Default: 3 -->
		<property name="initialPoolSize" value="5" />
		<!--连接池中保留的最小连接数。Default: 3 -->
		<property name="minPoolSize" value="5" />
		<!--连接池中保留的最大连接数。Default: 15 -->
		<property name="maxPoolSize" value="15" />
		<!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->
		<property name="acquireIncrement" value="5" />
		<!-- 控制数据源内加载的PreparedStatements数量。如果maxStatements与maxStatementsPerConnection均为0，则缓存被关闭。Default: 0 -->
		<property name="maxStatements" value="20" />
		<!-- maxStatementsPerConnection定义了连接池内单个连接所拥有的最大缓存statements数。Default: 0 -->
		<property name="maxStatementsPerConnection" value="15" />
		<!--最大空闲时间,1800秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
		<property name="maxIdleTime" value="1800" />
	</bean>
	
	
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
       <property name="dataSource" ref="dataSource"></property>
       <property name="configLocation" value="classpath:config/mybatic-config.xml"></property>
       <property name="mapperLocations" value="classpath:mapper/*.xml"></property>
    </bean>
    
	<bean id="sqlSessionTemplate"  class="org.mybatis.spring.SqlSessionTemplate" scope="prototype">
	 <constructor-arg ref="sqlSessionFactory" />
	</bean>
	<!-- jedisPool配置信息 --> 
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">  
    <property name="maxTotal" value="600"/> <!-- 控制一个pool可分配多少个jedis实例 -->  
    <property name="maxIdle" value="300" />   <!-- 控制一个pool最多有多少个状态为idle(空闲)的jedis实例 -->  
    <property name="maxWaitMillis" value="1000" />  <!-- 表示当borrow一个jedis实例时，最大的等待时间，如果超过等待时间，则直接抛出JedisConnectionException -->  
    <property name="testOnBorrow" value="true" /> <!-- 在borrow一个jedis实例时，是否提前进行validate操作；如果为true，则得到的jedis实例均是可用的 -->  
	</bean> 
	<!-- RedisBean 连接Redis-->
	<bean id="jedisPool" class="redis.clients.jedis.JedisPool" destroy-method="destroy">
		<constructor-arg ref="jedisPoolConfig" />
		<constructor-arg name="host" value="127.0.0.1"/>
		<constructor-arg name="port" value="6379"/>
		<constructor-arg name="timeout" value="50000"/><!-- 销毁时间 -->
		<constructor-arg name="password" value="123456"/>
	</bean>


	<!-- Shiro切点 -->

	 <import resource="Spring_Shiro.xml"/>

	
</beans>